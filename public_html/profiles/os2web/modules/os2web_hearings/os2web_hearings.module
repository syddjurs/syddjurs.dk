<?php
/**
 * @file
 * Code for the OS2web Planer i Høring feature.
 */

include_once 'os2web_hearings.features.inc';

/**
 * Implements hook_init().
 */
function os2web_hearings_init(){
  drupal_add_library('system', 'ui.datepicker');
}

/*
* Implements hook_menu()
*/
function os2web_hearings_menu(){
  $items = array();

  // Admin menu
  $items['admin/config/os2web_hearings'] = array(
    'title' => 'OS2Web Hearings',
    'description' => 'General settings ',
    'position' => 'right',
    'weight' => -10,
    'page callback' => 'system_admin_menu_block_page',
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'access arguments' => array('administer site configuration'),
  );

  $items['admin/config/os2web_hearings/settings'] = array(
    'title' => 'OS2web Hearings',
    'description' => 'Change settings for OS2web Hearings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('os2web_hearings_settings_form'),
    'access arguments' => array('administer site configuration'),
  );

  $items['node/%node/formular'] = array(
    'title callback' => 'node_page_title',
    'title arguments' => array(1),
    'page callback' => 'os2web_hearings_node_webform_view',
    'page arguments' => array(1),
    'access callback' => 'node_access',
    'access arguments' => array('view', 1),
  );

  return $items;
}

/*
* Settings form callback
*/
function os2web_hearings_settings_form(){
  $form['os2web_hearings_page_info_nid'] = array(
    '#title' => t('Node id for info text on hearings page'),
    '#default_value' => variable_get('os2web_hearings_page_info_nid'),
    '#type' => 'textfield',
  );

  $form['os2web_hearings_email_to_acadre'] = array(
    '#title' => t('Email adresse høringer skal sendes til (Acadre)'),
    '#default_value' => variable_get('os2web_hearings_email_to_acadre'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );

  $form['os2web_hearings_webform_fs'] = array(
    '#title' => t('Hearing case webform default values'),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['os2web_hearings_webform_fs']['os2web_hearings_webform_to_email'] = array(
    '#title' => t('To email'),
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_hearings_webform_to_email'),
  );

  $form['os2web_hearings_webform_fs']['os2web_hearings_webform_subject'] = array(
    '#title' => t('Email subject'),
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_hearings_webform_subject'),
  );

  $form['os2web_hearings_webform_fs']['os2web_hearings_webform_from_name'] = array(
    '#title' => t('From name'),
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_hearings_webform_from_name'),
  );

  $form['os2web_hearings_webform_fs']['os2web_hearings_webform_from_email'] = array(
    '#title' => t('From email'),
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_hearings_webform_from_email'),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_form_alter()
 */
function os2web_hearings_form_views_exposed_form_alter(&$form, &$form_state){
  $form['field_os2web_hearings_type_value']['#options']['All'] = t('All hearing types');

  // Limiting the options for exposed filter operator.
  $form['field_os2web_hearings_enddate_value_1_op']['#options'] = array (
    'not empty' => t('All hearings'),
    '>=' => t('Actual hearings'),
    '<' => t('Past hearings')
  );

  $form_state['input']['field_os2web_hearings_enddate_value_1']['value'] = date('Y-m-d', time());
}

/**
 * Implements hook_page_alter().
 */
function os2web_hearings_page_alter(&$page) {
  if (module_exists('os2web_subscription') &&
      request_path() === 'hoeringer') {

    // If the OS2web Subscription module are enabled, add a subscribe form.
    if (os2web_subscription_category_is_enabled('os2web_hearings_hearing_case')) {
      $page['content'][] = drupal_get_form('os2web_subscription_add_subscription_form', 'os2web_hearings_hearing_case');
    }
  }
}

/**
 * Implements hook_os2web_help().
 */
function os2web_hearings_os2web_help($sections) {

  // Content types.
  $sections['contenttype'] = t('<p><b>Hearings (<i>Høring</i>):</b> Create a <a href="@url" target="_blank">Hearing</a> to show about your hearing times and dates.<br />Hearings are shown from the <a href="@planer-i-h-ring" target="_blank">here</a>.</p>', array('@url' => url('admin/help/os2web_borger_dk'), '@planer-i-h-ring' => '/planer-i-h-ring'));

  // Importers.
  $sections['import'] = t('<p><b>Hearings:</b> Initialize the importer for hearings at <a href="@url">the import page.</a></p>', array('@url' => 'import/os2web_hearings_feeds_import'));

  return $sections;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function os2web_hearings_form_os2web_hearings_hearing_case_node_form_alter(&$form, &$form_state, $form_id) {
  // Set 'Send til Acadre ved publisering' checkbox to be checked as default, even if stored otherwise in the db
  $form['field_os2web_base_send_to_acadre']['und']['#default_value'] = TRUE;
}

/**
 * Implement hook_form_alter().
 *
 * Changes submit button class for hearings webform.
 */
function os2web_hearings_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id,'webform_client_form') === 0 && $form['#node']->type === 'os2web_hearings_hearing_case') {
    $form['actions']['submit']['#attributes']['class'][] = 'btn-success';
    $form['submitted']['zip']['#prefix'] = '<div class="row form-group"><div class="col-xs-3">';
    $form['submitted']['zip']['#suffix'] = '</div>';

    $form['submitted']['city']['#prefix'] = '<div class="col-xs-9">';
    $form['submitted']['city']['#suffix'] = '</div></div>';
  }
}


/**
 * Implements hook_node_insert().
 */
function os2web_hearings_node_insert($node) {

  if ($node->type != 'os2web_hearings_hearing_case') {
    return;
  }

  // Check if hearing should be sent to Acadre
  if ($node->status == NODE_PUBLISHED && $node->field_os2web_base_send_to_acadre['und'][0]['value'] == 1) {
    _os2web_hearings_send_to_acadre($node);
  }
}


/**
 * Implements hook_node_update().
 */
function os2web_hearings_node_update($node) {

  if ($node->type != 'os2web_hearings_hearing_case') {
    return;
  }

  // Check if hearing should be sent to Acadre
  if ($node->status == NODE_PUBLISHED && $node->field_os2web_base_send_to_acadre['und'][0]['value'] == 1) {
    _os2web_hearings_send_to_acadre($node);
  }
}

/**
 * Implements hook_node_presave().
 */
function os2web_hearings_node_presave($node) {
  // Add a default e-mail configuration for new nodes.
  if (empty($node->nid) && $node->is_new && $node->type == 'os2web_hearings_hearing_case') {
    $node->webform['emails'][] = array(
      'email' => variable_get('os2web_hearings_webform_to_email'),
      'subject' => variable_get('os2web_hearings_webform_subject'),
      'from_name' => variable_get('os2web_hearings_webform_from_name'),
      'from_address' => variable_get('os2web_hearings_webform_from_email'),
      'template' => theme(array('webform_mail_' . $node->nid, 'os2web_hearings_webform_email'), array('node' => $node)),
      'excluded_components' => array(),
      'html' => 1,
      'attachments' => 1,
    );
  }
}

/**
 * Generate mail.
 */
function _os2web_hearings_send_to_acadre($node) {

  $to   = variable_get('os2web_hearings_email_to_acadre');
  $from = variable_get('site_mail');

  // Only send email to Acadre if email address entered in settings is valid.
  if (!valid_email_address($to)) {
    drupal_set_message(t('Email adresse til Acadre er ikke valid. Venligt kontroller settings.'), 'warning');
    return;
  }

  // Generate variables for use in email template
  $date_format = 'd-m-Y H:i';
  $author = user_load($node->uid);
  $vars = array(
    'author_link'      => url('user/' . $node->uid, array('absolute' => TRUE)),
    'author_name'      => $author->name,
    'node'             => $node,
    'node_url'         => url('node/' . $node->nid, array('absolute' => TRUE)),
    'node_created'     => date($date_format, $node->created),
    'node_changed'     => date($date_format, $node->changed),
    'hearings_enddate' => date($date_format, strtotime($node->field_os2web_hearings_enddate['und'][0]['value'])),
    'politics'         => $node->field_os2web_base_politics['und'][0]['value'],
    'meeting'          => $node->field_os2web_hearings_meeting['und'][0]['value'],
    'case_no'          => $node->field_os2web_base_case_no['und'][0]['value'],
  );

  $params = array(
    'subject' => 'Høringspublicering: ' . $vars['case_no'],
    'body'    => theme('os2web_hearings_email', $vars),
    'from'    => $from,
  );

  watchdog('os2web_hearings', 'Sending hearing to Acadre.');

  // We are ok to build and send the node content to the specified email address
  drupal_mail('os2web_hearings', 'os2web_hearings_acadre', $to, language_default(), $params, $from, TRUE);

  drupal_set_message(t('Høring sendt til Acadre.'), 'status');
}

/**
 * Implements hook_mail().
 */
function os2web_hearings_mail($key, &$message, $params) {

  switch ($key) {
    case 'os2web_hearings_acadre':

      $message['subject'] = $params['subject'];
      $message['body'][]  = $params['body'];
      $message['headers']['MIME-Version'] = '1.0';
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8';
      $message['headers']['From'] = $message['headers']['Sender'] = $message['headers']['Return-Path'] = $message['headers']['Errors-To'] = $message['headers']['Reply-To'] = $params['from'];
      break;
  }
}

/**
 * Implements hook_theme().
 */
function os2web_hearings_theme($existing, $type, $theme, $path) {
  return array(
    'os2web_hearings_email' => array(
      'template' => 'os2web-hearings-email',
      'path' => drupal_get_path('module', 'os2web_hearings') . '/templates',
    ),
    'os2web_hearings_webform_email' => array(
      'template' => 'os2web-hearings-webform-email',
      'path' => drupal_get_path('module', 'os2web_hearings') . '/templates',
    ),
  );
}

/**
 * Renders the webform view of a single node.
 */
function os2web_hearings_node_webform_view($node) {
  $breadcrumb = array();
  // First item is duplicated as it's removed during preprocess.
  $breadcrumb[] = l('Home', '<front>');
  $breadcrumb[] = l('Home', '<front>');
  $breadcrumb[] = l('Høringer of afgørelser', 'hoeringer');
  $breadcrumb[] = l($node->title, 'node/' . $node->nid);

  // Set Breadcrumbs
  drupal_set_breadcrumb($breadcrumb);

  // If there is a menu link to this node, the link becomes the last part
  // of the active trail, and the link name becomes the page title.
  // Thus, we must explicitly set the page title to be the node title.
  drupal_set_title($node->title);
  $uri = entity_uri('node', $node);
  // Set the node path as the canonical URL to prevent duplicate content.
  drupal_add_html_head_link(array('rel' => 'canonical', 'href' => url($uri['path'], $uri['options'])), TRUE);
  // Set the non-aliased path as a default shortlink.
  drupal_add_html_head_link(array('rel' => 'shortlink', 'href' => url($uri['path'], array_merge($uri['options'], array('alias' => TRUE)))), TRUE);

  $node = node_load($node->nid);
  $view = node_view($node, 'node_webform');
  $rendered = drupal_render($view);
  return $rendered;
}
