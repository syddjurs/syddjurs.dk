<?php

/**
 * @file
 * Implements a field for displaying ESDH Cases directly.
 */

define('ACADRE_CM_ACCESS_OPEN_CASE', '3');
define('ACADRE_CM_ACCESS_OPEN_DOCUMENT', '3');

/* Field information hooks */

/**
 * Implements hook_field_info().
 */
function os2web_esdh_field_field_info() {
  return array(
    'os2web_esdh_field_case_ident' => array(
      'label' => t('ESDH Case'),
      'description' => t('Sags-id skal være på formen år/nummer eller år-nummer. Kun én værdi er tilladte.'),
      'default_widget' => 'os2web_esdh_field_case_ident_wid',
      'default_formatter' => 'os2web_esdh_field_case_ident_for',
    ),
    'os2web_esdh_field_doc_ident' => array(
      'label' => t('ESDH Document'),
      'description' => t('Dokument-id skal være på formen nummer/år eller nummer-år. Flere dokumenter skal være adskildt af , (komma).'),
      'default_widget' => 'os2web_esdh_field_doc_ident_wid',
      'default_formatter' => 'os2web_esdh_field_doc_ident_for',
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function os2web_esdh_field_field_formatter_info() {
  return array(
    'os2web_esdh_field_case_ident_for' => array(
      'label' => t('ESDH Case includer'),
      'field types' => array('os2web_esdh_field_case_ident'),
    ),
    'os2web_esdh_field_doc_ident_for' => array(
      'label' => t('ESDH Document includer'),
      'field types' => array('os2web_esdh_field_doc_ident'),
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 */
function os2web_esdh_field_field_widget_info() {

  return array(
    'os2web_esdh_field_case_ident_wid' => array(
      'label' => t('Case Identifier'),
      'field types' => array('os2web_esdh_field_case_ident'),
    ),
    'os2web_esdh_field_doc_ident_wid' => array(
      'label' => t('Document Identifier'),
      'field types' => array('os2web_esdh_field_doc_ident'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function os2web_esdh_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $field_name = $field['field_name'];
  $field_type = $field['type'];
  $default = '';
  if (isset($form_state['node']->{$field_name}[$langcode][$delta][$field_type])) {
    $default = ($form_state['node']->{$field_name}[$langcode][$delta][$field_type])? : 0;
  }
  switch ($instance['widget']['type']) {
    case 'os2web_esdh_field_case_ident_wid':
      $element['os2web_esdh_field_case_ident'] = array(
        '#type' => 'textfield',
        '#title' => check_plain($element['#title']),
        '#description' => check_plain($element['#description']),
        '#default_value' => $default,
        '#required' => $element['#required'],
        '#weight' => isset($element['#weight']) ? $element['#weight'] : 0,
        '#delta' => $delta,
      );
      break;

    case 'os2web_esdh_field_doc_ident_wid':
      $element['os2web_esdh_field_doc_ident'] = array(
        '#type' => 'textfield',
        '#title' => check_plain($element['#title']),
        '#description' => check_plain($element['#description']),
        '#default_value' => $default,
        '#required' => $element['#required'],
        '#weight' => isset($element['#weight']) ? $element['#weight'] : 0,
        '#delta' => $delta,
      );
      break;
  }
  return $element;
}

/**
 * Implements hook_field_is_empty().
 */
function os2web_esdh_field_field_is_empty($item, $field) {
  if (isset($item['os2web_esdh_field_case_ident']) && empty($item['os2web_esdh_field_case_ident'])) {
    return TRUE;
  }
  if (isset($item['os2web_esdh_field_doc_ident']) && empty($item['os2web_esdh_field_doc_ident'])) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_field_validate().
 */
function os2web_esdh_field_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {
  foreach ($items as $delta => $item) {

    // Validate all esdh case fields
    if (isset($item['os2web_esdh_field_case_ident'])) {
      $cases = explode(',', $item['os2web_esdh_field_case_ident']);
      foreach ($cases as $value) {
        $value = trim($value);
        // Adopt this for further testing.
        $valid = preg_match('/^\d{2,4}[-,\/]\d{1,20}$/', $value);
        if (!$valid && ($value != '')) {
          $errors[$field['field_name']][$langcode][$delta][] = array(
            'error' => 'Ugyldig fremstilling af sags-id. Sags-id skal være på formen år/nummer eller år-nummer. Flere sager skal være adskilt af , (komma).',
            'message' => t('%name: illegal value.', array('%name' => $instance['label'])),
          );
        }
      }
    }

    if (isset($item['os2web_esdh_field_doc_ident'])) {
      // Validate all esdh doc fields
      $docids = explode(',', $item['os2web_esdh_field_doc_ident']);
      foreach ($docids as $docid) {
        $docid = trim($docid);
        // Adopt this for further testing.
        $valid = preg_match('/^\d{1,20}[-,\/]\d{2}$/', $docid);
        if (!$valid && ($docid != '')) {
          $errors[$field['field_name']][$langcode][$delta][] = array(
            'error' => 'Ugyldig fremstilling af dokument-id. Dokument-id skal være på formen nummer/år eller nummer-år. Flere dokumenter skal være adskildt af , (komma).',
            'message' => t('%name: illegal value.', array('%name' => $instance['label'])),
          );
        }
      }
    }
  }
}

/**
 * Implements hook_field_formatter_view().
 */
function os2web_esdh_field_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'os2web_esdh_field_case_ident_for':
      if ($field = field_get_items('node', $entity, 'field_os2web_base_field_casesort')) {
        drupal_add_js(array('os2web_esdh_field' => array('sort' => $field[0]['value'])), 'setting');
      }

      foreach ($items as $delta => $item) {
        if ($item['os2web_esdh_field_case_ident']) {
          $cases = array();
          $ids = explode(',', $item['os2web_esdh_field_case_ident']);
          foreach ($ids as $id) {
            $cases[] = trim($id);
          }
          $element[$delta]['#markup'] = '<div class="fullcaserender">' . theme('os2web_esdh_case', array('id' => $cases)) . '</div>';
        }
      }
      break;

    case 'os2web_esdh_field_doc_ident_for':
      foreach ($items as $delta => $item) {
        if ($item['os2web_esdh_field_doc_ident']) {
          $docs = array();
          $ids = explode(',', $item['os2web_esdh_field_doc_ident']);
          foreach ($ids as $id) {
            $docs[] = trim($id);
          }
          $element[$delta]['#markup'] = '<div class="documenttable">' . theme('os2web_esdh_document', array('id' => $docs)) . '</div>';
        }
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_theme().
 */
function os2web_esdh_field_theme() {
  return array(
    'os2web_esdh_case' => array(
      'variables' => array('id' => FALSE),
    ),
    'os2web_esdh_document' => array(
      'variables' => array('id' => FALSE),
    ),
  );
}

/**
 * Implements theme_IDENTIFIER().
 */
function theme_os2web_esdh_case($vars) {

  $html = '';

  // Query CP Document for document matching case id(s).
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'os2web_cp_service_cp_document')
    ->fieldCondition('field_os2web_cp_service_case_id', 'value', $vars['id'], 'IN');
  $result = $query->execute();

  if (count($result > 0)) {
    $document_nodes = node_load_multiple(array_keys($result['node']));
    $html = theme('os2web_esdh_document', array('id' => $document_nodes, 'iscase' => TRUE));
  }
  return $html;
}

/**
 * Implements theme_IDENTIFIER().
 */
function theme_os2web_esdh_document($vars) {

  $html = '';

  $path = libraries_get_path('tablesorter');
  drupal_add_js($path . '/jquery.tablesorter.min.js');
  drupal_add_js(drupal_get_path('module', 'os2web_esdh_field') . '/os2web_esdh_field.js');

  if (!function_exists('os2web_esdh_provider_has_api')) {
    return '';
  }

  // Query for CP document matching document id
  if (!isset($vars['iscase'])) {
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'os2web_cp_service_cp_document')
      ->fieldCondition('field_os2web_cp_service_doc_id', 'value', $vars['id'], 'IN');
    $result = $query->execute();

    $vars['id'] = node_load_multiple(array_keys($result['node']));
  }

  // If no documents attached, show error message
  if (count($vars['id']) == 0) {
    if (isset($vars['iscase'])) {
      $html .= '<p>' . t('This case contains no public documents.') . '</p>';
    }
    return $html;
  }

  $id = $vars['id'];
  if (!is_array($id)) {
    $id = array($id);
  }

  // Create $rows array for use in table formatter
  foreach ($id as $docid) {
    $file_id = field_get_items('node', $docid, 'field_os2web_cp_service_file_id');

    // Display created date if edited date is not set.
    $created_date = field_get_items('node', $docid, 'field_os2web_cp_service_date');
    $edited_date = field_get_items('node', $docid, 'field_os2web_cp_service_edited');
    $display_date = (is_array($edited_date) ? $edited_date : $created_date);

    $rows[] = array(
      l($docid->title, 'os2web/service/gf/v1/' . $file_id[0]['safe_value'], array('attributes' => array('target' => '_blank'))),
      '<span class="documentdate">' . format_date(strtotime($display_date[0]['value']), 'custom', 'd/m/Y') . '</span>',
    );
  }

  $header = array(
    t('Dokumenttitel'),
    t('Opdateret'),
  );

  $html .= theme_table(array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => array(
      'class' => 'tablesorter',
    ),
  ));

  return $html;
}

/**
 * Implements hook_os2web_help().
 */
function os2web_esdh_field_os2web_help($sections) {

  // Fields.
  $sections['fields'] = t('<p><b>Link to cases and documents:</b> Many contenttypes has ability to link to cases and documents in the ESDH case system. When pages gets linked to cases and documents, links to them will automatically gets generated at the bottom of the page.</p>');

  return $sections;
}
